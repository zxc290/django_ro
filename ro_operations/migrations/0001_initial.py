# Generated by Django 2.1.7 on 2019-02-15 11:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppChannelList',
            fields=[
                ('cid', models.IntegerField(db_column='CID', primary_key=True, serialize=False)),
                ('cname', models.CharField(blank=True, db_column='CName', max_length=50, null=True)),
                ('cinfo', models.CharField(blank=True, db_column='CInfo', max_length=512, null=True)),
                ('pid', models.IntegerField(blank=True, db_column='PID', null=True)),
                ('gid', models.IntegerField(blank=True, db_column='GID', null=True)),
                ('pcid', models.IntegerField(blank=True, db_column='PCID', null=True)),
            ],
            options={
                'verbose_name': '渠道',
                'verbose_name_plural': '渠道',
                'db_table': 'App_Channel_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppManage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('gametypeno', models.IntegerField(db_column='GameTypeno', verbose_name='游戏类型id')),
                ('gametype', models.CharField(db_column='GameType', max_length=50, verbose_name='游戏类型')),
                ('ptid', models.IntegerField(db_column='Ptid', verbose_name='平台id')),
                ('channelid', models.IntegerField(blank=True, db_column='ChannelId', null=True, verbose_name='渠道id')),
                ('appid', models.CharField(db_column='Appid', max_length=50, verbose_name='appid')),
                ('appname', models.CharField(db_column='Appname', max_length=50, verbose_name='app名称')),
                ('callbackurl', models.CharField(blank=True, db_column='CallbackUrl', max_length=50, null=True, verbose_name='回调url')),
                ('os', models.IntegerField(blank=True, null=True, verbose_name='os')),
                ('lable', models.CharField(blank=True, max_length=50, null=True, verbose_name='标签')),
                ('mix', models.IntegerField(blank=True, null=True, verbose_name='mix')),
                ('app_parameter', models.CharField(blank=True, max_length=1000, null=True, verbose_name='app参数')),
                ('del_field', models.IntegerField(db_column='del', verbose_name='删除')),
            ],
            options={
                'verbose_name': 'APP管理',
                'verbose_name_plural': 'APP管理',
                'db_table': 'app_manage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppServerChannel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('gid', models.IntegerField(db_column='GID')),
                ('zoneidx', models.IntegerField()),
                ('zonename', models.CharField(blank=True, max_length=50, null=True)),
                ('pid', models.IntegerField(blank=True, db_column='PID', null=True)),
                ('cid', models.IntegerField(db_column='CID')),
                ('appid', models.CharField(blank=True, max_length=50, null=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('statu', models.IntegerField()),
                ('server_statu', models.IntegerField()),
                ('server_suggest', models.IntegerField()),
                ('is_delete', models.IntegerField()),
                ('player_highlines', models.IntegerField(blank=True, null=True)),
                ('server_weight', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '应用服务渠道',
                'verbose_name_plural': '应用服务渠道',
                'db_table': 'App_Server_Channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServerList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('uniconid', models.CharField(blank=True, max_length=50, null=True, verbose_name='uniconid')),
                ('gametypeno', models.IntegerField(verbose_name='游戏类型id')),
                ('pid', models.IntegerField(blank=True, null=True, verbose_name='平台id')),
                ('truezoneid', models.IntegerField(verbose_name='真实区id')),
                ('server_id', models.IntegerField(verbose_name='服务器id')),
                ('server_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='服务器名称')),
                ('server_status', models.IntegerField(blank=True, null=True, verbose_name='服务器状态')),
                ('server_address', models.CharField(blank=True, max_length=50, null=True, verbose_name='服务器地址')),
                ('server_suggest', models.IntegerField(blank=True, null=True, verbose_name='服务器推荐')),
                ('statu', models.IntegerField(blank=True, null=True, verbose_name='状态')),
                ('del_field', models.IntegerField(blank=True, db_column='del', null=True, verbose_name='删除')),
                ('kaiqu_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='开区时间')),
                ('max_users', models.IntegerField(blank=True, null=True, verbose_name='最大用户数')),
                ('server_weight', models.IntegerField(blank=True, null=True, verbose_name='服务器权重')),
                ('plan_time', models.DateTimeField(blank=True, null=True, verbose_name='计划开区时间')),
            ],
            options={
                'verbose_name': '服务器列表',
                'verbose_name_plural': '服务器列表',
                'db_table': 'Server_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.IntegerField(db_column='userId', primary_key=True, serialize=False, verbose_name='用户id')),
                ('useridentity', models.CharField(db_column='userIdentity', max_length=50, verbose_name='用户身份')),
                ('password', models.CharField(blank=True, db_column='passWord', max_length=50, null=True, verbose_name='密码')),
                ('emailaddress', models.CharField(blank=True, db_column='emailAddress', max_length=32, null=True, verbose_name='邮件地址')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VersionInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('appidx', models.IntegerField(verbose_name='appidx')),
                ('gametypeno', models.IntegerField(verbose_name='游戏类型id')),
                ('ptid', models.IntegerField(verbose_name='平台id')),
                ('appid', models.CharField(db_column='Appid', max_length=50, verbose_name='appid')),
                ('version', models.CharField(db_column='Version', max_length=50, verbose_name='版本')),
                ('channelid', models.IntegerField(blank=True, db_column='ChannelId', null=True, verbose_name='渠道id')),
                ('statu', models.IntegerField(verbose_name='状态')),
                ('ondate', models.DateField(blank=True, db_column='onDate', null=True, verbose_name='开启时间')),
                ('offdate', models.DateField(blank=True, db_column='offDate', null=True, verbose_name='关闭时间')),
                ('cdn', models.CharField(blank=True, db_column='CDN', max_length=250, null=True, verbose_name='cdn')),
                ('testcdn', models.CharField(blank=True, db_column='TESTCDN', max_length=250, null=True, verbose_name='测试cdn')),
                ('appurl', models.CharField(blank=True, max_length=250, null=True, verbose_name='appurl')),
                ('testappurl', models.CharField(blank=True, db_column='TestAppurl', max_length=250, null=True, verbose_name='测试appurl')),
                ('cashurl', models.CharField(blank=True, db_column='Cashurl', max_length=250, null=True, verbose_name='现金url')),
                ('info', models.CharField(blank=True, db_column='Info', max_length=50, null=True, verbose_name='信息')),
                ('noticeid', models.CharField(blank=True, db_column='Noticeid', max_length=50, null=True, verbose_name='通知id')),
                ('testnoticeid', models.CharField(blank=True, db_column='TESTNoticeid', max_length=50, null=True, verbose_name='测试通知id')),
                ('prevnoticeid', models.CharField(blank=True, db_column='PREVNoticeid', max_length=50, null=True, verbose_name='上一个通知id')),
                ('isdel', models.IntegerField(verbose_name='是否删除')),
                ('iosshenhe', models.IntegerField(blank=True, db_column='IosShenhe', null=True, verbose_name='ios审核')),
            ],
            options={
                'verbose_name': '版本信息',
                'verbose_name_plural': '版本信息',
                'db_table': 'Version_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WelfareManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(blank=True, max_length=100, null=True, verbose_name='申请账号')),
                ('rolename', models.CharField(blank=True, max_length=100, null=True, verbose_name='申请角色名')),
                ('amount', models.IntegerField(verbose_name='申请发送数额')),
                ('applicant', models.CharField(blank=True, max_length=100, null=True, verbose_name='申请人')),
                ('approver', models.CharField(blank=True, max_length=100, null=True, verbose_name='批准人')),
                ('status', models.IntegerField(choices=[(0, '审核中、'), (1, '已通过'), (2, '未通过')], null=True, verbose_name='审核状态')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('weeklysend', models.BooleanField(default=False, verbose_name='是否每周固定发放')),
                ('weeklysendamount', models.IntegerField(verbose_name='每周固定发送数额')),
            ],
            options={
                'verbose_name': '福利发放管理',
                'verbose_name_plural': '福利发放管理',
            },
        ),
    ]
